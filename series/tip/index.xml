<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tip on Page</title>
    <link>https://bonghoonko.github.io/series/tip/</link>
    <description>Recent content in Tip on Page</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>2019 Bong-Hoon Ko. all rights reserved.</copyright>
    <lastBuildDate>Mon, 25 Nov 2019 16:59:18 +0900</lastBuildDate>
    
	<atom:link href="https://bonghoonko.github.io/series/tip/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>React Tip 정리 1</title>
      <link>https://bonghoonko.github.io/resource/reacttip1/</link>
      <pubDate>Mon, 25 Nov 2019 16:59:18 +0900</pubDate>
      
      <guid>https://bonghoonko.github.io/resource/reacttip1/</guid>
      <description>1. 조건에 따라 className 추가 &amp;lt;button className={&amp;#34;btn &amp;#34; + (this.state.btnActive ? &amp;#34;active&amp;#34; : &amp;#34;&amp;#34;)}&amp;gt; ...&amp;lt;/button&amp;gt; 
2. map 반대로 {test.slice(0).reverse.map( data =&amp;gt; { ... })} 
3. setState 완료 후 실행할 Callback 함수 설정 방법 this.setState({ test : &amp;#34;test&amp;#34; ... }, () =&amp;gt; { ...something }); 
4. Event에 인자값 넘겨주기 &amp;lt;button onClick={ () =&amp;gt; this.btnClick(arg1, arg2) }&amp;gt; Click &amp;lt;/button&amp;gt; 
5. render 안에서 Switch Statement 사용 render() { return ( &amp;lt;div&amp;gt; {( () =&amp;gt; { switch(test) { case 1 : return &amp;lt;Test1 /&amp;gt;; break; case 2 : return &amp;lt;Test2 /&amp;gt;; break; .</description>
    </item>
    
  </channel>
</rss>